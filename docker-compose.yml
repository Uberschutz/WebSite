version: "3"
services:
    db_monitor:
        image: 'huggingface/mongoku'
        depends_on:
          - user_db
        environment:
          - MONGOKU_DEFAULT_HOST='mongodb://127.0.0.1:27117;${UZ_root_user}:${UZ_root_password}@user_db:27117'
        ports:
          - "3100:3100"
    caddy:
        image: 'caddy'
  #        image: "abiosoft/caddy:latest"
  #        build:
  #          context: .
            #        context: github.com/abiosoft/caddy-docker.git
  #          args:
  #            - plugins: http.login,http.jwt
        volumes:
            #- ./certs:/root/certs # to sync mkcert certificates to Caddy
            - ./Caddyfile:/etc/Caddyfile  # to mount custom Caddyfile
        ports:
          - "443:443"
          - "80:80"
        depends_on:
            - client_web
            - dev_client_web
            - mail_server
            - user_db
            - user_server
            - db_monitor
    mail_server:
      build:
        context: https://github.com/Uberschutz/UberMail.git
        args:
          - NODE_ENV=production
      ports:
        - "8082:8082"
      volumes:
        - ./UberMail/credentials.js:/home/node/app/credentials.js
    user_server:
        build:
          context: https://github.com/Uberschutz/UberUsers.git
          args:
            - NODE_ENV=production
        ports:
          - "8081:8081"
        depends_on:
           - user_db
        volumes:
          - ./UberUsers/credentials.js:/home/node/app/credentials.js
        environment:
          - uz_user=${uz_user}
          - uz_password=${uz_password}
    client_web:
        build:
          context: https://github.com/Uberschutz/WebSite.git#production
          dockerfile: Dockerfile
          args:
            - NODE_ENV=production
            - REACT_APP_ANALYTICS=true
        ports:
          - "8080:8080"
        depends_on:
          - mail_server
          - user_server
          - user_db
        volumes:
          - ./credentials.js:/home/node/app/credentials.js
        environment:
          - NODE_ENV=production
    dev_client_web:
        build:
          context: https://github.com/Uberschutz/WebSite.git#develop
          dockerfile: DevDockerfile
          args:
            - NODE_ENV=production
            - REACT_APP_ANALYTICS=false
        ports:
          - "8083:8083"
        depends_on:
          - mail_server
          - user_server
          - user_db
        volumes:
          - ./credentials.js:/home/node/app/credentials.js
        environment:
          - NODE_ENV=production
    user_db:
        image: 'mongo:latest'
        command: mongod --port 27117 --auth
        ports:
          - '27117:27117'
        environment:
          - MONGO_INITDB_ROOT_USERNAME=${UZ_root_user}
          - MONGO_INITDB_ROOT_PASSWORD=${UZ_root_password}
          - MONGO_INITDB_DATABASE=users
        restart: on-failure
        volumes:
          - ./init-mongo.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
          - ../user_database/data:/data/db
