# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  test:
#    branches:
#      only:
#        - master
#        - develop
#        - unit-tests
#        - rendering-unit-tests

    docker:
      # specify the version you desire here
      - image: circleci/node:latest

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    # working_directory: ~/Front_WebSite/

    steps:
      - checkout

#      - run:
#          name: update-npm
#          name: update-yarn
#          command: 'sudo npm install -g npm@latest'

      - run:
          name: update-dependencies
          command: 'yarn upgrade --silent --no-progress'
#          command: 'npm update'
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
#            - v1-dependencies-{{ checksum "package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install-yarn
#          name: install-npm
          command: 'yarn install --silent --no-progress'
#          command: 'npm install'

      - save_cache:
          paths:
            - ./node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
#          key: v1-dependencies-{{ checksum "package-lock.json" }}

      # run tests!
      - run: yarn test
#      - run: npm test

  build-and-deploy:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "81:46:f4:6a:d5:d9:cd:64:ab:ce:5a:1d:7a:4e:b3:4a"
      - run:
          name: Deploy Over SSH
          command: |
            if [ "$CIRCLE_BRANCH" == "develop" ];
            then
              ssh $SSH_USER@$SSH_HOST -p 50417 "cd uberschutz_project/eip/WebSite && git pull && docker-compose build --pull dev_client_web && docker-compose up -d dev_client_web"
            elif [ "$CIRCLE_BRANCH" == "production" ];
            then
              ssh $SSH_USER@$SSH_HOST -p 50417 "cd uberschutz_project/eip/WebSite && git pull && docker-compose build --pull --force-rm client_web && docker-compose up -d client_web"
            fi

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test:
          filters:
            branches:
              only:
                - master
                - develop
                - production
                - unit-tests
                - rendering-unit-tests
      - build-and-deploy:
          requires:
            - test # only deploy once test job has completed
          filters:
            branches:
              only: # only deploy on the develop and productions branches
                - develop
                - production
